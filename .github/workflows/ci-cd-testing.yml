name: Website-CI-CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonar-analysis:
    name: Static Code Analysis with SonarCloud
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Install Sonar Scanner for JS
        run: npm install -g @sonar/scan

      - name: Run Sonar Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST: ${{ secrets.SONAR_HOST }}
        run: |
          sonar \
            -Dsonar.projectKey=website-Kripto \
            -Dsonar.sources=. \
            -Dsonar.host.url=http://$SONAR_HOST \
            -Dsonar.token=$SONAR_TOKEN \
            -Dsonar.sourceEncoding=UTF-8

  cicd-build-test:
    name: Lint, Test, Build, and Push Docker
    runs-on: ubuntu-latest
    needs: sonar-analysis
    outputs:
      docker_image: ${{ steps.build_image.outputs.image }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npx eslint script.js

      - name: Run Unit Tests
        run: npm test
        env:
          CI: true

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and Push Docker image
        id: build_image
        run: |
          LOWERCASE_REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME=ghcr.io/$LOWERCASE_REPO_NAME:latest
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME
          echo "image=$IMAGE_NAME" >> $GITHUB_OUTPUT

  cd:
    name: Deploy to Azure VM
    runs-on: ubuntu-latest
    needs: cicd-build-test
    if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Azure VM
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.AZURE_VM_IP }}
          username: ${{ secrets.AZURE_VM_USERNAME }}
          password: ${{ secrets.AZURE_VM_PASSWORD }}
          script: |
            set -e

            echo "Logging into GHCR on Azure VM..."
            sudo docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GHCR_TOKEN }}

            echo "Stopping and removing old container..."
            sudo docker stop website-kripto || true
            sudo docker rm website-kripto || true

            echo "Pulling latest Docker image..."
            sudo docker pull "${{ needs.cicd-build-test.outputs.docker_image }}"

            echo "Running new Docker container..."
            sudo docker run -d \
              --name website-kripto \
              -p 4000:80 \
              "${{ needs.cicd-build-test.outputs.docker_image }}"

            echo "âœ… Deploy berhasil! Akses di: http://${{ secrets.AZURE_VM_IP }}:3000/Kripto/"
